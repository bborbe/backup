// Copyright (c) 2025 Benjamin Borbe All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	backupbenjaminborbedev1 "github.com/bborbe/backup/k8s/apis/backup.benjamin-borbe.de/v1"
)

// BackupSpecApplyConfiguration represents a declarative configuration of the BackupSpec type for use
// with apply.
type BackupSpecApplyConfiguration struct {
	Host     *backupbenjaminborbedev1.BackupHost     `json:"host,omitempty"`
	Port     *backupbenjaminborbedev1.BackupPort     `json:"port,omitempty"`
	User     *backupbenjaminborbedev1.BackupUser     `json:"user,omitempty"`
	Dirs     *backupbenjaminborbedev1.BackupDirs     `json:"dirs,omitempty"`
	Excludes *backupbenjaminborbedev1.BackupExcludes `json:"excludes,omitempty"`
}

// BackupSpecApplyConfiguration constructs a declarative configuration of the BackupSpec type for use with
// apply.
func BackupSpec() *BackupSpecApplyConfiguration {
	return &BackupSpecApplyConfiguration{}
}

// WithHost sets the Host field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Host field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithHost(value backupbenjaminborbedev1.BackupHost) *BackupSpecApplyConfiguration {
	b.Host = &value
	return b
}

// WithPort sets the Port field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Port field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithPort(value backupbenjaminborbedev1.BackupPort) *BackupSpecApplyConfiguration {
	b.Port = &value
	return b
}

// WithUser sets the User field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the User field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithUser(value backupbenjaminborbedev1.BackupUser) *BackupSpecApplyConfiguration {
	b.User = &value
	return b
}

// WithDirs sets the Dirs field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Dirs field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithDirs(value backupbenjaminborbedev1.BackupDirs) *BackupSpecApplyConfiguration {
	b.Dirs = &value
	return b
}

// WithExcludes sets the Excludes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Excludes field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithExcludes(value backupbenjaminborbedev1.BackupExcludes) *BackupSpecApplyConfiguration {
	b.Excludes = &value
	return b
}
