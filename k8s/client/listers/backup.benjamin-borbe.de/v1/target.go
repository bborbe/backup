// Copyright (c) 2025 Benjamin Borbe All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	backupbenjaminborbedev1 "github.com/bborbe/backup/k8s/apis/backup.benjamin-borbe.de/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// TargetLister helps list Targets.
// All objects returned here must be treated as read-only.
type TargetLister interface {
	// List lists all Targets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*backupbenjaminborbedev1.Target, err error)
	// Targets returns an object that can list and get Targets.
	Targets(namespace string) TargetNamespaceLister
	TargetListerExpansion
}

// targetLister implements the TargetLister interface.
type targetLister struct {
	listers.ResourceIndexer[*backupbenjaminborbedev1.Target]
}

// NewTargetLister returns a new TargetLister.
func NewTargetLister(indexer cache.Indexer) TargetLister {
	return &targetLister{listers.New[*backupbenjaminborbedev1.Target](indexer, backupbenjaminborbedev1.Resource("target"))}
}

// Targets returns an object that can list and get Targets.
func (s *targetLister) Targets(namespace string) TargetNamespaceLister {
	return targetNamespaceLister{listers.NewNamespaced[*backupbenjaminborbedev1.Target](s.ResourceIndexer, namespace)}
}

// TargetNamespaceLister helps list and get Targets.
// All objects returned here must be treated as read-only.
type TargetNamespaceLister interface {
	// List lists all Targets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*backupbenjaminborbedev1.Target, err error)
	// Get retrieves the Target from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*backupbenjaminborbedev1.Target, error)
	TargetNamespaceListerExpansion
}

// targetNamespaceLister implements the TargetNamespaceLister
// interface.
type targetNamespaceLister struct {
	listers.ResourceIndexer[*backupbenjaminborbedev1.Target]
}
